{"version":3,"sources":["webpack://programs/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://programs/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://programs/./node_modules/@babel/runtime/helpers/construct.js","webpack://programs/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://programs/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://programs/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://programs/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://programs/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://programs/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://programs/./node_modules/tinytime/dist/tinytime.js","webpack://programs/./node_modules/gatsby-plugin-mdx/index.js","webpack://programs/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://programs/./src/components/Header.js","webpack://programs/./src/templates/post.jsx"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","SubToTypeIdentifierMap","months","days","paddWithZeros","int","compiler","tokens","date","options","month","getMonth","year","getFullYear","hours","getHours","seconds","getSeconds","minutes","getMinutes","day","getDate","compiled","index","token","t","v","mnth","padMonth","getDay","padDays","hour","padHours","hour24","parser","template","position","text","char","sub","undefined","templateAST","render","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","Header","pathname","useLocation","startsWith","className","to","postDateTemplate","tinytime","PostTemplate","data","post","frontmatter","body","pageContext","previous","next","Helmet","title","content","description","SectionContainer","dateTime","Date","PageTitle","style","gridTemplateRows","slug"],"mappings":"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","file":"component---src-templates-post-jsx-44db1fcb63e0c86e4491.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict'; //      \n\n/**\n * We want to represent each subs. type as minimally as possible,\n * so instead of using strings we just use characters, which lets us\n * represent 27 individual subs. using a single character each.\n */\n\nvar UserText = 'a';\nvar FullMonth = 'b';\nvar PartialMonth = 'c';\nvar FullYear = 'd';\nvar PartialYear = 'e';\nvar DayOfTheWeek = 'f';\nvar Hour = 'g';\nvar Minutes = 'h';\nvar Seconds = 'i';\nvar PostOrAnteMeridiem = 'j';\nvar Day = 'k';\nvar DayOfTheMonth = 'l';\nvar NumberMonth = 'n';\nvar Hour24 = 'm';\nvar SubToTypeIdentifierMap = {\n  'MMMM': FullMonth,\n  'MM': PartialMonth,\n  'Mo': NumberMonth,\n  'YYYY': FullYear,\n  'YY': PartialYear,\n  'dddd': DayOfTheWeek,\n  'DD': DayOfTheMonth,\n  'Do': Day,\n  'h': Hour,\n  'H': Hour24,\n  'mm': Minutes,\n  'ss': Seconds,\n  'a': PostOrAnteMeridiem\n}; //      \n\n/**\n * These types help ensure we don't misspell them anywhere. They will be\n * removed during build.\n */\n\nvar months = [\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n/**\n * Takes an integer and returns a string left padded with\n * a zero to the left. Used to display minutes and hours (1:01:00PM);\n */\n\nfunction paddWithZeros(int) {\n  return int < 10 ? '0' + int : '' + int;\n}\n/**\n * Adds suffix to day, so 16 becomes 16th.\n */\n\n\nfunction suffix(int) {\n  return int % 10 == 1 && int != 11 ? int + \"st\" : int % 10 == 2 && int != 12 ? int + \"nd\" : int % 10 == 3 && int != 13 ? int + \"rd\" : int + \"th\";\n}\n/**\n * The compiler takes in our array of tokens returned from the parser\n * and returns the formed template. It just iterates over the tokens and\n * appends some text to the returned string depending on the type of token.\n * @param {Array<Tokens>} tokens\n * @param {Date} date\n * @param {TinyTimeOptions} options\n * @returns {String}\n */\n\n\nfunction compiler(tokens, date, options) {\n  var month = date.getMonth();\n  var year = date.getFullYear();\n  var hours = date.getHours();\n  var seconds = date.getSeconds();\n  var minutes = date.getMinutes();\n  var day = date.getDate();\n  var compiled = '';\n  var index = 0;\n\n  while (index < tokens.length) {\n    var token = tokens[index];\n\n    switch (token.t) {\n      case UserText:\n        // $FlowFixMe flow doesn't know that v is always populated on UserText\n        compiled += token.v;\n        break;\n\n      case Day:\n        compiled += suffix(day);\n        break;\n\n      case PartialMonth:\n        compiled += months[month].slice(0, 3);\n        break;\n\n      case FullMonth:\n        compiled += months[month];\n        break;\n\n      case NumberMonth:\n        var mnth = month + 1;\n\n        if (options.padMonth) {\n          mnth = paddWithZeros(mnth);\n        }\n\n        compiled += mnth;\n        break;\n\n      case FullYear:\n        compiled += year;\n        break;\n\n      case PartialYear:\n        compiled += (year + '').slice(2);\n        break;\n\n      case DayOfTheWeek:\n        compiled += days[date.getDay()];\n        break;\n\n      case DayOfTheMonth:\n        compiled += options.padDays ? paddWithZeros(day) : day;\n        break;\n\n      case Hour:\n        var hour = hours === 0 || hours === 12 ? 12 : hours % 12;\n\n        if (options.padHours) {\n          hour = paddWithZeros(hour);\n        }\n\n        compiled += hour;\n        break;\n\n      case Hour24:\n        var hour24 = hours;\n\n        if (options.padHours) {\n          hour24 = paddWithZeros(hour24);\n        }\n\n        compiled += hour24;\n        break;\n\n      case Minutes:\n        compiled += paddWithZeros(minutes);\n        break;\n\n      case Seconds:\n        compiled += paddWithZeros(seconds);\n        break;\n\n      case PostOrAnteMeridiem:\n        compiled += hours >= 12 ? 'PM' : 'AM';\n        break;\n    }\n\n    index++;\n  }\n\n  return compiled;\n} //      \n\n/**\n * t is type and v is value. Minified property\n * names are being used because the current minification\n * step does not mangle property names, and we want to\n * reduce bundle size as much as possible.\n */\n\n/**\n * Rather than using a bunch of potentially confusing regular\n * expressions to match patterns in templates, we use a simple\n * parser, taking the aproach of a compiler. This is equivalent\n * to a lexer as it returns a stream of tokens. Since there is\n * no additional analysis required for semantics we just call\n * it a parser.\n * \n * It will return an array of tokens, each corresponding to either\n * UserText (just text we want to render) or any number of the\n * subsitution types stored in SubToTypeIdentifierMap.\n * \n */\n\n\nfunction parser(template) {\n  var tokens = [];\n  /**\n   * We iterate through each character in the template string, and track\n   * the index of the character we're processing with `position`. We start\n   * at 0, the first character.\n   */\n\n  var position = 0;\n  /**\n   * `text` is used to accumulate what we call \"UserText\", or simply text that\n   * is not a subsitution. For example, in the template:\n   *  \n   *  \"The day is {day}.\"\n   * \n   * There are two instances of `UserText`, \"The day is \" and \".\", which is the text\n   * befor eand after the subsitution. With this template our tokens would look something like:\n   * \n   * [\n   *  { type: UserText, value: \"The day is \"},\n   *  { type : DaySub },\n   *  { type: UserText, value: \".\" }\n   * ]\n   * \n   */\n\n  var text = '';\n\n  while (position < template.length) {\n    var char = template[position++];\n    /**\n     * A bracket indicates we're starting a subsitution. Any characters after this,\n     * and before the next '}' will be considered part of the subsitution name.\n     */\n\n    if (char === '{') {\n      // Push any `UserText` we've accumulated and reset the `text` variable.\n      if (text) {\n        tokens.push({\n          t: UserText,\n          v: text\n        });\n      }\n\n      text = '';\n      var sub = '';\n      char = template[position++];\n\n      while (char !== '}') {\n        sub += char;\n        char = template[position++];\n      }\n\n      tokens.push({\n        t: SubToTypeIdentifierMap[sub]\n      });\n    } // Anything not inside brackets is just plain text.\n    else {\n        text += char;\n      }\n  }\n  /**\n   * We might have some text after we're done iterating through the template if\n   * the template ends with some `UserText`.\n   */\n\n\n  if (text) {\n    tokens.push({\n      t: UserText,\n      v: text\n    });\n  }\n\n  return tokens;\n} //      \n\n\nfunction tinytime(template) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var templateAST = parser(template);\n  return {\n    render: function render(date) {\n      return compiler(templateAST, date, options);\n    }\n  };\n}\n\nmodule.exports = tinytime;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nexport default function Header() {\n  const { pathname } = useLocation();\n\n  if (!pathname || !pathname.startsWith(\"/post\")) {\n    return null;\n  }\n\n  return (\n    <header className=\"flex justify-between items-center py-10\">\n      <div className=\"text-base leading-5\">\n        <Link to=\"/\" className=\"font-medium text-gray-500 hover:text-gray-700\">\n          Home\n        </Link>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport tinytime from \"tinytime\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport Header from \"../components/Header\";\nimport SectionContainer from \"../components/SectionContainer\";\nimport PageTitle from \"../components/PageTitle\";\n\nconst postDateTemplate = tinytime(\"{dddd}, {MMMM} {DD}, {YYYY}\");\n\nexport default function PostTemplate(props) {\n  const { frontmatter, body } = props.data.post || {};\n  const { previous, next } = props.pageContext;\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{frontmatter.title} - Varun Dev</title>\n        <meta name=\"description\" content={frontmatter.description} />\n      </Helmet>\n      <SectionContainer>\n        <Header />\n      </SectionContainer>\n      <SectionContainer>\n        <article className=\"xl:divide-y xl:divide-gray-200\">\n          <header className=\"pt-6 xl:pb-10\">\n            <div className=\"space-y-1 text-center\">\n              <dl className=\"space-y-10\">\n                <div>\n                  <dt className=\"sr-only\">Published on</dt>\n                  <dd className=\"text-base leading-6 font-medium text-gray-500\">\n                    <time dateTime={frontmatter.date}>\n                      {postDateTemplate.render(new Date(frontmatter.date))}\n                    </time>\n                  </dd>\n                </div>\n              </dl>\n              <div>\n                <PageTitle>{frontmatter.title}</PageTitle>\n              </div>\n            </div>\n          </header>\n          <div\n            className=\"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:gap-x-6 pb-16 xl:pb-20\"\n            style={{ gridTemplateRows: \"auto 1fr\" }}\n          >\n            <div className=\"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2\">\n              <div className=\"prose max-w-none pt-10 pb-8\">\n                <MDXRenderer>{body}</MDXRenderer>\n              </div>\n              {/* Comments area */}\n            </div>\n\n            <aside className=\"text-sm font-medium divide-y divide-gray-200 xl:col-start-1 xl:row-start-2\">\n              <div className=\"space-y-8 py-8\">\n                {next.slug && (\n                  <div>\n                    <h2 className=\"text-xs leading-5 tracking-wide uppercase text-gray-500\">\n                      Next Post\n                    </h2>\n                    <div className=\"text-green-600 hover:text-green-700\">\n                      <Link to={next.slug}>{next.title}</Link>\n                    </div>\n                  </div>\n                )}\n                {previous.slug && (\n                  <div>\n                    <h2 className=\"text-xs leading-5 tracking-wide uppercase text-gray-500\">\n                      Previous Post\n                    </h2>\n                    <div className=\"text-green-600 hover:text-green-700\">\n                      <Link to={previous.slug}>{previous.title}</Link>\n                    </div>\n                  </div>\n                )}\n              </div>\n              <div className=\"pt-8\">\n                <Link to=\"/\" className=\"text-green-600 hover:text-green-700\">\n                  &larr; All Posts\n                </Link>\n              </div>\n            </aside>\n          </div>\n        </article>\n      </SectionContainer>\n    </React.Fragment>\n  );\n}\n\n// can be named anything pageQuery(or)query, etc.,\nexport const query = graphql`\n  query ($slug: String!) {\n    post: mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        date\n        title\n        description\n      }\n      body\n    }\n  }\n`;\n"],"sourceRoot":""}